name: Docs

on:
  push:
    branches:
      - gh-pages
    tags:
      - "v*"
  workflow_dispatch:

env:
  duckdb-version: "1.2.0"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      DUCKDB_LIB_DIR: ${{ github.workspace }}/opt/duckdb
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # to get gh-pages
      - uses: astral-sh/setup-uv@v3
      - uses: Swatinem/rust-cache@v2
      - name: Install libduckdb
        run: |
          wget https://github.com/duckdb/duckdb/releases/download/v${{ env.duckdb-version }}/libduckdb-linux-amd64.zip
          mkdir -p ${{ github.workspace }}/opt/duckdb
          unzip libduckdb-linux-amd64.zip -d ${{ github.workspace }}/opt/duckdb
      - name: Sync
        run: uv sync --all-extras
      - name: Deploy
        if: github.event_name == 'push' && startsWith(github.ref_name, 'v')
        run: uv run mike deploy ${{ github.ref_name }} latest --push --update-aliases
        env:
          GIT_COMMITTER_NAME: ci-bot
          GIT_COMMITTER_EMAIL: ci-bot@example.com
      - name: Checkout gh-pages
        run: git checkout gh-pages
      - uses: actions/upload-pages-artifact@v3
        id: deployment
        with:
          path: .
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/deploy-pages@v4
        id: deployment
