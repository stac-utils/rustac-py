name: CI

on:
  pull_request:
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  duckdb-version: "1.2.0"

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.os.runner }}
    env:
      DUCKDB_LIB_DIR: ${{ github.workspace }}/opt/duckdb
      LD_LIBRARY_PATH: ${{ github.workspace }}/opt/duckdb
      DYLD_LIBRARY_PATH: ${{ github.workspace }}/opt/duckdb
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
        os:
          - runner: ubuntu-latest
            duckdb-slug: linux-amd64
          - runner: macos-latest
            duckdb-slug: osx-universal
          # https://github.com/stac-utils/stacrs/issues/1
          # - windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v3
      - uses: Swatinem/rust-cache@v2
      - name: Install Python version
        run: uv python install ${{ matrix.python-version }}
      - name: Install libduckdb
        run: |
          wget https://github.com/duckdb/duckdb/releases/download/v${{ env.duckdb-version }}/libduckdb-${{ matrix.os.duckdb-slug }}.zip
          mkdir -p ${{ github.workspace }}/opt/duckdb
          unzip libduckdb-${{ matrix.os.duckdb-slug }}.zip -d ${{ github.workspace }}/opt/duckdb
      - name: Sync
        run: uv sync --all-extras
      - name: Lint
        run: scripts/lint
      - name: Test
        run: scripts/test
      - name: Sync w/o extras
        run: uv sync
      - name: Test w/o extras
        run: uv run pytest
